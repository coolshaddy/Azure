trigger:
- main

variables:
- group: AKS-TF-Vars

stages:
- stage: DeployInfra
  displayName: 'Terragrunt Apply All Infra'
  jobs:
  - job: TerragruntApply
    displayName: 'Run Terragrunt Apply'
    pool:
      vmImage: ubuntu-latest

    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '3.x'

    - script: |
        curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
        az login --service-principal -u $(ARM_CLIENT_ID) -p $(ARM_CLIENT_SECRET) --tenant $(ARM_TENANT_ID)
      displayName: 'Azure Login'

    - script: |
        sudo apt-get update && sudo apt-get install -y unzip wget
        wget https://releases.hashicorp.com/terraform/1.6.6/terraform_1.6.6_linux_amd64.zip
        unzip terraform_1.6.6_linux_amd64.zip
        sudo mv terraform /usr/local/bin/
      displayName: 'Install Terraform'

    - script: |
        TERRAGRUNT_VERSION=0.56.4
        wget https://github.com/gruntwork-io/terragrunt/releases/download/v${TERRAGRUNT_VERSION}/terragrunt_linux_amd64
        chmod +x terragrunt_linux_amd64
        sudo mv terragrunt_linux_amd64 /usr/local/bin/terragrunt
      displayName: 'Install Terragrunt'

    - script: |
        echo "üîÅ Applying infrastructure with Terragrunt"

        MODULES=("container-registry" "network" "aks")

        for dir in "${MODULES[@]}"; do
          echo "üöÄ Running Terragrunt in: live/dev/$dir"
          pushd live/dev/$dir
          
          # Ensure backend config is reinitialized
          terragrunt init -reconfigure

          # Run plan and apply
          terragrunt apply --terragrunt-non-interactive --auto-approve

          popd
        done
      displayName: 'Terragrunt Apply for ACR, AKS'

