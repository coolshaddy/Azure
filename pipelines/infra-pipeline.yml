trigger:
- main

variables:
- group: AKS-TF-Vars

stages:
- stage: DeployInfra
  displayName: 'Terragrunt Apply All Infra'
  jobs:
  - job: TerragruntApply
    displayName: 'Run Terragrunt Apply'
    pool:
      vmImage: ubuntu-latest

    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '3.x'

    - script: |
        curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
        az login --service-principal -u $(ARM_CLIENT_ID) -p $(ARM_CLIENT_SECRET) --tenant $(ARM_TENANT_ID)
      displayName: 'Azure Login'

    - script: |
        sudo apt-get update && sudo apt-get install -y unzip wget
        wget https://releases.hashicorp.com/terraform/1.6.6/terraform_1.6.6_linux_amd64.zip
        unzip terraform_1.6.6_linux_amd64.zip
        sudo mv terraform /usr/local/bin/
      displayName: 'Install Terraform'

    - script: |
        TERRAGRUNT_VERSION=0.56.4
        wget https://github.com/gruntwork-io/terragrunt/releases/download/v${TERRAGRUNT_VERSION}/terragrunt_linux_amd64
        chmod +x terragrunt_linux_amd64
        sudo mv terragrunt_linux_amd64 /usr/local/bin/terragrunt
      displayName: 'Install Terragrunt'

    # Step 1: Bootstrap the infrastructure (Create Storage Account and State Backend)
    - script: |
        echo "🔁 Bootstrapping infrastructure for state backend"
        cd live/dev/bootstrap

        echo "🔧 Running terragrunt init for backend"
        terragrunt init -reconfigure
        if [ $? -ne 0 ]; then
          echo "❌ terragrunt init failed for bootstrap"
          exit 1
        fi

        echo "📦 Running terragrunt apply for bootstrap"
        terragrunt apply --terragrunt-non-interactive --auto-approve
        cd -
      displayName: 'Bootstrap Infrastructure'

    # Step 2: Apply the main infrastructure (Container Registry, Network, AKS)
    - script: |
        echo "🔁 Applying main infrastructure with Terragrunt"
        for dir in container-registry network aks ; do
          echo "🚀 Running Terragrunt in: live/dev/$dir"
          cd live/dev/$dir

          echo "🔧 Running terragrunt init -reconfigure"
          terragrunt init -reconfigure
          if [ $? -ne 0 ]; then
            echo "❌ terragrunt init failed in $dir"
            exit 1
          fi

          echo "📦 Running terragrunt apply"
          terragrunt apply --terragrunt-non-interactive --auto-approve
          cd -
        done
      displayName: 'Terragrunt Apply for ACR, AKS'
